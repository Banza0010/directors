@model demo22.Models.DirectorName1

@{
    ViewBag.Title = "Create";
    Html.EnableClientValidation(true);
}


<div class="panel">
    <div class="panel-heading">
        <h4>Add New Director </h4>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm(null,null, FormMethod.Post, new { id = "f1"}))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-lg-12" style="background-color:#f9fafc">
                <div class="form">

                   
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", @style = "background-color:White" } })
                                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Initials, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Initials, new { htmlAttributes = new { @class = "form-control", @style = "background-color:White" } })
                                @Html.ValidationMessageFor(model => model.Initials, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                                @*@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @style = "background-color:White" } })*@
                                @Html.DropDownList("Title", new List<SelectListItem>
                                 {
                                  new SelectListItem { Text = "Mr", Value = "Mr"},
                                  new SelectListItem { Text = "Mrs", Value = "Mrs"},
                                  new SelectListItem { Text = "Ms", Value = "Ms"},
                                  new SelectListItem { Text = "Dr", Value = "Dr."},
                                  new SelectListItem { Text = "Prof", Value = "Prof."},
                                  new SelectListItem { Text = "Miss", Value = "Miss"},
                                  new SelectListItem { Text = "Sir", Value = "Sir"}
                                  }, "Select", new { @class = "form-control", @style = "background-color:White" })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @style = "background-color:White" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-2">
                            <div class="form-group" style="width:180px">
                                @Html.LabelFor(model => model.YearOfBirth, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.YearOfBirth, new { htmlAttributes = new { @class = "form-control", @style = "background-color:White" } })
                                @Html.ValidationMessageFor(model => model.YearOfBirth, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group" style="width:180px">
                                @Html.LabelFor(model => model.Grouping, "Grouping", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("Grouping", null, htmlAttributes: new { @class = "form-control", @style = "background-color:White" })
                                @Html.ValidationMessageFor(model => model.Grouping, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-lg-2">
                            <div class="form-group" style="width:180px">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownList("Gender", new List<SelectListItem>
                         {
                          new SelectListItem { Text = "Male", Value = "Male"},
                          new SelectListItem { Text = "Female", Value = "Female"},
                          }, "Select", new { @class = "form-control", @style = "background-color:White" })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr style="height:1px;border:none;color:gray;background-color:gray;" />
                <div class="row col-lg-12">
                    <p><b>Qualification(s) :</b></p>

                    <p style="color:red">++ QUALIFICATIONS!!</p>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                   
                    @*<div id="AddAlert" class="alert alert-danger alert-dismissible" role="alert" style="height:50px">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <p class="alert-heading" style="text-align:right">Note :add qualifications here!!</p>

                    </div>*@      
                    <hr style="height:1px;border:none;color:gray;background-color:gray;" />          
                </div>
                
               
                <p><b>Profile:</b></p>
                <div class="row">
                    <div class="col-lg-12">
                       
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Profile, htmlAttributes: new { @class = "control-label " })*@
                            @Html.TextAreaFor(model => model.Profile, 5, 200, new { htmlAttributes = new { @class = "form-control" , @style = "background-color:White, width:20%, float:left " } })
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-12" style="background-color:#f9fafc">
                    <input class="btn btn-default" type="submit" value="Cancel" onclick="location.href='@Url.Action("Index", "DirectorName1")'" style="width:100px" />

                    @*<input type="submit" value="Create" class="btn btn-primary" style="width:100px" />*@

                    <button type="submit"
                            id="submitButton"
                            value="Create"
                            class="btn btn-primary"
                            style="width:100px"
                            onclick="return  DisplayProgressMessage(this, 'Save');">
                        Save
                    </button>

                </div>
            </div>
        }
    </div>
</div>

<div class="submit-progress hidden">
    <label>Please wait while Saving Data...</label>
</div>

<script type="text/javascript">

  //function DisplayProgressMessage(ctl, msg) {
  //  $(ctl).prop("disabled", false);
  //  $(ctl).text(msg);
  //  return true;
  //}

    function DisplayProgressMessage(ctl, msg) {
        if($("#f1").valid())
        {
            $(ctl).prop("disabled", false).text(msg);
            $(".submit-progress").removeClass("hidden");
            return true;
        }
       // return false;
  }

</script>



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
